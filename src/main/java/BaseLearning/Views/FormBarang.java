/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BaseLearning.Views;

import javax.swing.JOptionPane;
import BaseLearning.Interfaces.IBarangService;
import BaseLearning.Entities.Barang;
import BaseLearning.Services.BarangService;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author "231232010-Fadly Mubarok"
 */
public class FormBarang extends javax.swing.JFrame {
    /**
     * Creates new form FormBarang
     */
    IBarangService barangService;
    public FormBarang() {
        initComponents();
        barangService = new BarangService();
        GetListData();
        input_kode_barang_lama_hidden.setVisible(false);
        input_id_hidden.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        input_kode_barang_lama_hidden = new javax.swing.JTextField();
        input_nama_barang = new javax.swing.JTextField();
        input_harga_barang = new javax.swing.JTextField();
        btn_reset = new javax.swing.JButton();
        btn_simpan = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        btn_keluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_barang = new javax.swing.JTable();
        input_kode_barang = new javax.swing.JTextField();
        input_id_hidden = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText(":: FORM INPUT BARANG");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setText("Kode Barang");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 52, -1, -1));

        jLabel3.setText("Nama Barang");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 89, -1, -1));

        jLabel4.setText("Harga Barang");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 129, -1, -1));
        getContentPane().add(input_kode_barang_lama_hidden, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 50, -1));
        getContentPane().add(input_nama_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 89, 180, -1));
        getContentPane().add(input_harga_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 129, 180, -1));

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });
        getContentPane().add(btn_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, 110));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 70, -1));

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        getContentPane().add(btn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 70, -1));

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        getContentPane().add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 70, -1));

        btn_keluar.setText("Keluar");
        btn_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keluarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 70, -1));

        table_barang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kode Barang", "Nama Barang", "Harga Barang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_barang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_barangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_barang);
        if (table_barang.getColumnModel().getColumnCount() > 0) {
            table_barang.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, 220));
        getContentPane().add(input_kode_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 49, 180, -1));
        getContentPane().add(input_id_hidden, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 50, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        Barang barang = MappingData();
        if(barang == null) return;
        Barang result = barangService.InsertData(barang);
        if(result == null)
        {
            ShowDialogError(barangService.GetErrors());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Data berhasil ditambah");
            ClearText();
            GetListData();
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        ClearText();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        // TODO add your handling code here:
        String inputId = input_id_hidden.getText();
        if(inputId.isBlank())
        {
            JOptionPane.showMessageDialog(rootPane, "Silahkan pilih data terlebih dahulu");
            return;
        }
        int id = ParseNumber(inputId);
        if(id <= 0) return;
        boolean result = barangService.DeleteData(id);
        if(!result)
        {
            ShowDialogError(barangService.GetErrors());
        } else {
            ClearText();
            JOptionPane.showMessageDialog(rootPane, "Data berhasil dihapus");
            GetListData();
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keluarActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(rootPane, "Apakah anda yakin ingin keluar dari aplikasi?");
        if(result == 0)
            setVisible(false);
    }//GEN-LAST:event_btn_keluarActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // TODO add your handling code here:
        
        String kodeBarangLama = input_kode_barang.getText();
        if(kodeBarangLama.isBlank())
        {
            JOptionPane.showMessageDialog(rootPane, "Silahkan klik data pada tabel terlebih dahulu");
            return;
        }
        Barang barang = MappingData();
        if(barang == null) return;
        Barang result = barangService.UpdateData(kodeBarangLama, barang);
        if(result == null)
        {
            ShowDialogError(barangService.GetErrors());
        } else {
            ClearText();
            JOptionPane.showMessageDialog(rootPane, "Data berhasil diupdate");
            GetListData();
        }
    }//GEN-LAST:event_btn_editActionPerformed

    private void table_barangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_barangMouseClicked
        // TODO add your handling code here:
        int selectedRow = table_barang.getSelectedRow();
        if(selectedRow != -1)
        {
            String idhidden = table_barang.getValueAt(selectedRow, 0).toString();
            String kodeBarang = table_barang.getValueAt(selectedRow, 2).toString();
            String namaBarang = table_barang.getValueAt(selectedRow, 3).toString();
            String hargaBarang = table_barang.getValueAt(selectedRow, 4).toString();
            hargaBarang = hargaBarang.replaceAll(",", "");

            input_id_hidden.setText(idhidden);
            input_kode_barang.setText(kodeBarang);
            input_kode_barang_lama_hidden.setText(kodeBarang);
            input_nama_barang.setText(namaBarang);
            input_harga_barang.setText(hargaBarang);
        }
    }//GEN-LAST:event_table_barangMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_keluar;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JTextField input_harga_barang;
    private javax.swing.JTextField input_id_hidden;
    private javax.swing.JTextField input_kode_barang;
    private javax.swing.JTextField input_kode_barang_lama_hidden;
    private javax.swing.JTextField input_nama_barang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_barang;
    // End of variables declaration//GEN-END:variables

    private void ShowDialogError(List<String> errors) {
        String error = "";
        
        for (String err : errors) {
            error += err + "\n";
        }
        
        JOptionPane.showMessageDialog(rootPane, error);
    }

    private DefaultTableModel ConvertModel(List<Barang> model) {
        String[] columns = { "Id", "No", "Kode Barang", "Nama Barang", "Harga Barang" };
        Object[][] datas = new Object[model.size()][columns.length];
        int row = 1;
        for (int i = 0; i < model.size(); i++) {
            Barang data = model.get(i);
            if(data == null) break;
            datas[i][0] = data.Id;
            datas[i][1] = row++;
            datas[i][2] = data.KodeBarang;
            datas[i][3] = data.NamaBarang;
            DecimalFormat formatter = new DecimalFormat("#,###");
            datas[i][4] = formatter.format(data.HargaBarang);
        }
        return new DefaultTableModel(datas, columns);
    }

    private void GetListData() {
        List<Barang> datas = barangService.GetListBarang();
        DefaultTableModel convertModel = ConvertModel(datas);
        table_barang.setModel(convertModel);
        TableColumn column = table_barang.getColumnModel().getColumn(0);
        column.setMaxWidth(0);
        column.setMinWidth(0);
        column.setPreferredWidth(0);
    }
    
    private void ClearText()
    {
        input_id_hidden.setText("");
        input_kode_barang_lama_hidden.setText("");
        input_kode_barang.setText("");
        input_nama_barang.setText("");
        input_harga_barang.setText("");
    }

    private int ParseNumber(String column)
    {
        int newValue = 0;
        if(column.isBlank())
        {
            JOptionPane.showMessageDialog(rootPane, "Invalid Number");
            newValue = -1;
        } else {
            try{
                newValue = Integer.parseInt(column) ;
            } catch(NumberFormatException ex)
            {
                JOptionPane.showMessageDialog(rootPane, "Invalid Number");
                newValue = -1;
            }
        }
        return newValue;
    }
    
    private Barang MappingData() {
        String kodeBarang = input_kode_barang.getText();
        String namaBarang = input_nama_barang.getText();
        String hargaBarangStr = input_harga_barang.getText();
        
        int hargaBarang = ParseNumber(hargaBarangStr);
        if(hargaBarang < 0) return null;
        if(input_id_hidden.getText().isBlank()){
            return new Barang(kodeBarang, namaBarang, hargaBarang);
        }else {
            int id = Integer.parseInt(input_id_hidden.getText());
            return new Barang(id, kodeBarang, namaBarang, hargaBarang);
        }
    }
}
